{"version":3,"sources":["webpack:///./src/components/PostPreview.js","webpack:///./src/pages/index.js"],"names":["PostPreview","post","node","frontmatter","fields","excerpt","style","margin","to","slug","date","title","groupAllPosts","posts","res","month","index","postMonth","tag","length","isMore","push","pageQuery","IndexPage","data","trending","locations","edges","slice","months","all","Layout","Bio","Box","row","map","className","key","header","light","borderBottom"],"mappings":"yMAgBeA,EAbK,SAAC,GAAc,IAAD,IAAXC,KACyBC,KAAtCC,EADwB,EACxBA,YAAaC,EADW,EACXA,OAAQC,EADG,EACHA,QAC7B,OACE,yBAAKC,MAAO,CAAEC,OAAQ,wBACpB,kBAAC,OAAD,CAAMC,GAAIJ,EAAOK,MACf,4BAAKN,EAAYO,MACjB,4BAAKP,EAAYQ,OACjB,2BAAIN,M,YC4CNO,EAAgB,SAAAC,GACpB,IAAMC,EAAM,GACRC,EAAQ,KACZ,IAAK,IAAMC,KAASH,EAAO,CACzB,IAAMZ,EAAOY,EAAMG,GACbC,EAAYhB,EAAKC,KAAKC,YAAYY,MACxC,GAAc,OAAVA,EAAgB,CAClB,GAAIA,EAAMG,MAAQD,EAAW,CAC3BF,EAAMF,MAAME,EAAMF,MAAMM,OAAS,GAAGC,QAAS,EAC7CL,EAAMF,MAAMQ,KAAKpB,GACjB,SAEFc,EAAQ,KAEI,OAAVA,IACFA,EAAQ,CACNG,IAAKD,EACLJ,MAAO,CAACZ,KAGZa,EAAIO,KAAKN,GAEX,OAAOD,GAKIQ,GAFEC,UAxEG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KACbC,GADmC,EAAhBC,UACRF,EAAKC,SAASE,MAAMC,MAAM,EAAG,IACxCC,EAASjB,EAAcY,EAAKM,IAAIH,OACtC,OACE,kBAACI,EAAA,EAAD,KACE,6BACE,kBAACC,EAAA,EAAD,OAEF,6BACE,6BACE,iDACA,kBAACC,EAAA,EAAD,CAAKC,KAAG,GACLT,EAASU,KAAI,SAAClC,EAAMe,GACnB,OACE,yBAAKoB,WAAYpB,EAAQ,GAAK,GAAM,EAAI,OAAS,QAC/C,kBAAC,EAAD,CAAaqB,IAAKpC,EAAKC,KAAKE,OAAOK,KAAMR,KAAMA,WAO3D,6BACE,6BACE,0CACC4B,EAAOM,KAAI,SAAApB,GACV,OACE,kBAACkB,EAAA,EAAD,CAAKI,IAAKtB,EAAMG,IAAKoB,OAAQvB,EAAMG,IAAKqB,OAAK,GAC1CxB,EAAMF,MAAMsB,KAAI,SAAAlC,GACf,IAAMK,EAAQL,EAAKmB,OACf,CAAEoB,aAAc,kBAChB,GACJ,OACE,yBAAKlC,MAAOA,GACV,kBAAC,EAAD,CAAa+B,IAAKpC,EAAKC,KAAKE,OAAOK,KAAMR,KAAMA,gBAwC/C","file":"component---src-pages-index-js-e36e767b56a7e0bdadbb.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostPreview = ({ post }) => {\n  const { frontmatter, fields, excerpt } = post.node\n  return (\n    <div style={{ margin: \"15px 10px 30px 10px\" }}>\n      <Link to={fields.slug}>\n        <h3>{frontmatter.date}</h3>\n        <h2>{frontmatter.title}</h2>\n        <p>{excerpt}</p>\n      </Link>\n    </div>\n  )\n}\n\nexport default PostPreview\n","import React from \"react\"\n\nimport Bio from \"../components/Bio\"\nimport Box from \"../components/Box\"\nimport PostPreview from \"../components/PostPreview\"\nimport Layout from \"../components/Layout\"\n\nconst IndexPage = ({ data, locations }) => {\n  const trending = data.trending.edges.slice(0, 3)\n  const months = groupAllPosts(data.all.edges)\n  return (\n    <Layout>\n      <div>\n        <Bio />\n      </div>\n      <div>\n        <div>\n          <h3>ðŸ”¥ Trending posts</h3>\n          <Box row>\n            {trending.map((post, index) => {\n              return (\n                <div className={(index + 1) % 3 !== 0 ? \"item\" : \"last\"}>\n                  <PostPreview key={post.node.fields.slug} post={post} />\n                </div>\n              )\n            })}\n          </Box>\n        </div>\n      </div>\n      <div>\n        <div>\n          <h3>ðŸ—„ Archive</h3>\n          {months.map(month => {\n            return (\n              <Box key={month.tag} header={month.tag} light>\n                {month.posts.map(post => {\n                  const style = post.isMore\n                    ? { borderBottom: \"2px solid #777\" }\n                    : {}\n                  return (\n                    <div style={style}>\n                      <PostPreview key={post.node.fields.slug} post={post} />\n                    </div>\n                  )\n                })}\n              </Box>\n            )\n          })}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nconst groupAllPosts = posts => {\n  const res = []\n  let month = null\n  for (const index in posts) {\n    const post = posts[index]\n    const postMonth = post.node.frontmatter.month\n    if (month !== null) {\n      if (month.tag === postMonth) {\n        month.posts[month.posts.length - 1].isMore = true\n        month.posts.push(post)\n        continue\n      }\n      month = null\n    }\n    if (month === null) {\n      month = {\n        tag: postMonth,\n        posts: [post],\n      }\n    }\n    res.push(month)\n  }\n  return res\n}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    trending: allMarkdownRemark(\n      sort: { fields: [frontmatter___views], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            draft\n          }\n        }\n      }\n    }\n    all: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            month: date(formatString: \"MMMM YYYY\")\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            draft\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}