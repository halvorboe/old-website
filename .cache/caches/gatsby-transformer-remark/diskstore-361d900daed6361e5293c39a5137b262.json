{
  "expireTime": 9007200843919224000,
  "key": "transformer-remark-markdown-html-ast-a56585bb38b579edced553d8bf137564-gatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-",
  "val": {
    "type": "root",
    "children": [
      {
        "type": "element",
        "tagName": "p",
        "properties": {},
        "children": [
          {
            "type": "text",
            "value": "Bigtable is a distributed storage system developed internally by Google to handle petabyte-scale applications - like Google Maps and Google Analytics. In 2015 Bigtable was launched as a public service on Google Cloud.",
            "position": {
              "start": { "line": 1, "column": 1, "offset": 0 },
              "end": { "line": 1, "column": 218, "offset": 217 }
            }
          }
        ],
        "position": {
          "start": { "line": 1, "column": 1, "offset": 0 },
          "end": { "line": 1, "column": 218, "offset": 217 }
        }
      },
      { "type": "text", "value": "\n" },
      {
        "type": "element",
        "tagName": "p",
        "properties": {},
        "children": [
          {
            "type": "text",
            "value": "Similar to many other datastores, Bigtable uses a structure of rows and columns. Where it differs is in that Bigtable only allows for a single index - the row-key. Three primary operations exist:",
            "position": {
              "start": { "line": 3, "column": 1, "offset": 219 },
              "end": { "line": 3, "column": 196, "offset": 414 }
            }
          }
        ],
        "position": {
          "start": { "line": 3, "column": 1, "offset": 219 },
          "end": { "line": 3, "column": 196, "offset": 414 }
        }
      },
      { "type": "text", "value": "\n" },
      {
        "type": "element",
        "tagName": "ul",
        "properties": {},
        "children": [
          { "type": "text", "value": "\n" },
          {
            "type": "element",
            "tagName": "li",
            "properties": {},
            "children": [
              {
                "type": "element",
                "tagName": "strong",
                "properties": {},
                "children": [
                  {
                    "type": "text",
                    "value": "Mutate",
                    "position": {
                      "start": { "line": 5, "column": 7, "offset": 422 },
                      "end": { "line": 5, "column": 13, "offset": 428 }
                    }
                  }
                ],
                "position": {
                  "start": { "line": 5, "column": 5, "offset": 420 },
                  "end": { "line": 5, "column": 15, "offset": 430 }
                }
              },
              {
                "type": "text",
                "value": " - used to change the value connected to a row key and also for inserts.",
                "position": {
                  "start": { "line": 5, "column": 15, "offset": 430 },
                  "end": { "line": 5, "column": 87, "offset": 502 }
                }
              }
            ],
            "position": {
              "start": { "line": 5, "column": 1, "offset": 416 },
              "end": { "line": 6, "column": 1, "offset": 503 }
            }
          },
          { "type": "text", "value": "\n" },
          {
            "type": "element",
            "tagName": "li",
            "properties": {},
            "children": [
              {
                "type": "element",
                "tagName": "strong",
                "properties": {},
                "children": [
                  {
                    "type": "text",
                    "value": "Read",
                    "position": {
                      "start": { "line": 7, "column": 7, "offset": 510 },
                      "end": { "line": 7, "column": 11, "offset": 514 }
                    }
                  }
                ],
                "position": {
                  "start": { "line": 7, "column": 5, "offset": 508 },
                  "end": { "line": 7, "column": 13, "offset": 516 }
                }
              },
              {
                "type": "text",
                "value": " - read the value of a single row key.",
                "position": {
                  "start": { "line": 7, "column": 13, "offset": 516 },
                  "end": { "line": 7, "column": 51, "offset": 554 }
                }
              }
            ],
            "position": {
              "start": { "line": 7, "column": 1, "offset": 504 },
              "end": { "line": 8, "column": 1, "offset": 555 }
            }
          },
          { "type": "text", "value": "\n" },
          {
            "type": "element",
            "tagName": "li",
            "properties": {},
            "children": [
              {
                "type": "element",
                "tagName": "strong",
                "properties": {},
                "children": [
                  {
                    "type": "text",
                    "value": "Range",
                    "position": {
                      "start": { "line": 9, "column": 7, "offset": 562 },
                      "end": { "line": 9, "column": 12, "offset": 567 }
                    }
                  }
                ],
                "position": {
                  "start": { "line": 9, "column": 5, "offset": 560 },
                  "end": { "line": 9, "column": 14, "offset": 569 }
                }
              },
              {
                "type": "text",
                "value": " - read a range of row keys. Both filtering and aggregations are supported.",
                "position": {
                  "start": { "line": 9, "column": 14, "offset": 569 },
                  "end": { "line": 9, "column": 89, "offset": 644 }
                }
              }
            ],
            "position": {
              "start": { "line": 9, "column": 1, "offset": 556 },
              "end": { "line": 9, "column": 89, "offset": 644 }
            }
          },
          { "type": "text", "value": "\n" }
        ],
        "position": {
          "start": { "line": 5, "column": 1, "offset": 416 },
          "end": { "line": 9, "column": 89, "offset": 644 }
        }
      },
      { "type": "text", "value": "\n" },
      {
        "type": "element",
        "tagName": "p",
        "properties": {},
        "children": [
          {
            "type": "text",
            "value": "To achieve scaling, Bigtable splits the data into ",
            "position": {
              "start": { "line": 11, "column": 1, "offset": 646 },
              "end": { "line": 11, "column": 51, "offset": 696 }
            }
          },
          {
            "type": "element",
            "tagName": "em",
            "properties": {},
            "children": [
              {
                "type": "text",
                "value": "nodes",
                "position": {
                  "start": { "line": 11, "column": 52, "offset": 697 },
                  "end": { "line": 11, "column": 57, "offset": 702 }
                }
              }
            ],
            "position": {
              "start": { "line": 11, "column": 51, "offset": 696 },
              "end": { "line": 11, "column": 58, "offset": 703 }
            }
          },
          {
            "type": "text",
            "value": ". Each ",
            "position": {
              "start": { "line": 11, "column": 58, "offset": 703 },
              "end": { "line": 11, "column": 65, "offset": 710 }
            }
          },
          {
            "type": "element",
            "tagName": "em",
            "properties": {},
            "children": [
              {
                "type": "text",
                "value": "node",
                "position": {
                  "start": { "line": 11, "column": 66, "offset": 711 },
                  "end": { "line": 11, "column": 70, "offset": 715 }
                }
              }
            ],
            "position": {
              "start": { "line": 11, "column": 65, "offset": 710 },
              "end": { "line": 11, "column": 71, "offset": 716 }
            }
          },
          {
            "type": "text",
            "value": " is a commodity server and stores a range of row keys. As a result, choosing the right key for your workload is crucial.",
            "position": {
              "start": { "line": 11, "column": 71, "offset": 716 },
              "end": { "line": 11, "column": 191, "offset": 836 }
            }
          }
        ],
        "position": {
          "start": { "line": 11, "column": 1, "offset": 646 },
          "end": { "line": 11, "column": 191, "offset": 836 }
        }
      },
      { "type": "text", "value": "\n" },
      {
        "type": "element",
        "tagName": "p",
        "properties": {},
        "children": [
          {
            "type": "text",
            "value": "For example, consider the example of storing a marketing event in Bigtable. The event looks like this:",
            "position": {
              "start": { "line": 13, "column": 1, "offset": 838 },
              "end": { "line": 13, "column": 103, "offset": 940 }
            }
          }
        ],
        "position": {
          "start": { "line": 13, "column": 1, "offset": 838 },
          "end": { "line": 13, "column": 103, "offset": 940 }
        }
      },
      { "type": "text", "value": "\n" },
      {
        "type": "raw",
        "value": "<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"15d1369c-934e-11ea-bb37-0242ac130002\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"timestamp\"</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"https://www.example.com/about\"</span>\n<span class=\"token punctuation\">}</span>```\n\nThere are three types of data here<span class=\"token operator\">:</span>\n\nRandom \n-------\n\nThe row key is random. Random data should not be the beginning if a low key in Bigquery because it makes range queries useless.\n\nTimestamp \n----------\n\nThe timestamp for the example is a long time ago<span class=\"token punctuation\">,</span> but when dealing with timestamps<span class=\"token punctuation\">,</span> it is essential to get them in the right format.\n\n<span class=\"token number\">2019</span>#<span class=\"token number\">12</span>#<span class=\"token number\">03</span>#<span class=\"token number\">14</span><span class=\"token operator\">:</span><span class=\"token number\">05</span><span class=\"token operator\">:</span><span class=\"token number\">12</span>\n\nURL \n----\n\nWe are reversing the most common.\n\nIn summary<span class=\"token punctuation\">,</span> Bigtable is a great datastore - if you are storing massive amounts of data. Otherwise<span class=\"token punctuation\">,</span> it's terrible.</code></pre></div>",
        "position": {
          "start": { "line": 15, "column": 1, "offset": 942 },
          "end": { "line": 42, "column": 1, "offset": 1589 }
        }
      }
    ],
    "position": {
      "start": { "line": 1, "column": 1, "offset": 0 },
      "end": { "line": 42, "column": 1, "offset": 1589 }
    }
  }
}
